<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>전파고양이</title>
    <link>/</link>
    <description>Recent content on 전파고양이</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 12 Apr 2020 00:00:00 +0900</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Emacs-lisp 자료형</title>
      <link>/post/emacs/emacs-lisp-datatype/</link>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0900</pubDate>
      
      <guid>/post/emacs/emacs-lisp-datatype/</guid>
      <description>출력하기 print(&amp;#34;이렇게 출력합니다&amp;#34;) (message &amp;#34;이렇게 출력합니다&amp;#34;) 이렇게 출력합니다 emacslisp-배워보기 표현식 이해하기 리스트 형태의 표현식이 계산될 때 좌에서 우로 계산 되며 첫번째 원소는 함수의 정의로 나머지 원소는 인자들로 계산된 후 함수를 호출하게 된다. 호출된 함수가 리턴하는 값을 그 표현식의 값(value)라고 부른다.
(message &amp;#34;hello workd&amp;#34;) hello workd (message &amp;#34;hello: %d&amp;#34; (+ 1 2)) hello: 3 메시지는 &amp;ldquo;hello: %&amp;ldquo;와 3을 argument로 받아 실핵된다.
심벌 이해하기 자신의 그대로 값으로 계산되지 않은 message + 를 심벌이라고 부른다.</description>
    </item>
    
    <item>
      <title>Emacs-lisp 조건문</title>
      <link>/post/emacs/emacs-lisp-condition/</link>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0900</pubDate>
      
      <guid>/post/emacs/emacs-lisp-condition/</guid>
      <description>(if COND THEN ELSE &amp;hellip;)
COND의 결과가 nil이 아니면 THEN 표현식을 계산후에 리턴. 아니면 &amp;hellip;을 계산한 후에 마지막 표현식을 리턴한다.
(message &amp;#34;hello %s&amp;#34; (if (= 1 2) &amp;#34;hello&amp;#34; &amp;#34;world&amp;#34;)) hello world </description>
    </item>
    
    <item>
      <title>19장 타입파라미터</title>
      <link>/post/emacs/pis-19-typeparameter/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0900</pubDate>
      
      <guid>/post/emacs/pis-19-typeparameter/</guid>
      <description>subtype이란 무엇인가? F가 G의 서브타입이라면 G가 쓰일 자리에 F가 쓰여도 된다.
In programming language theory, subtyping (also subtype polymorphism or inclusion polymorphism) is a form of type polymorphism in which a subtype is a datatype that is related to another datatype (the supertype) by some notion of substitutability, meaning that program elements, typically subroutines or functions, written to operate on elements of the supertype can also operate on elements of the subtype.</description>
    </item>
    
    <item>
      <title>python virtualenv 환경정리</title>
      <link>/post/python/python-environment/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0900</pubDate>
      
      <guid>/post/python/python-environment/</guid>
      <description>pyenv 설치 brew install pyenv virtualenv 사용하기 가상환경 생성하기  virtualenv {환경이름} 위의 경로를 생성하면 환경이름으로 된 폴더가 만들어짐  $ virtualenv venv 활성화 시키기 source {환경이름}/bin/activate를 입력하면 shell의 모양이 다음과 같이 바뀜
(환경이름) $ 내가 사용하는 모듈을 저장하기 pip freeze &amp;gt; requirements.txt
내가 사용하는 모듈 설치하기 pip install -r requirements.txt
virtualEnvWrapper 설정하기 virutalenv만 사용하면 매번 source를 통해서 가상환경에 진입해야 한다.
pip install virtualenvwrapper # ~/.zsrc에 아래를 등록 export WORKON_HOME=~/.virtualenvs export VIRTUALENVWRAPPER_PYTHON=&amp;#34;$(which python3)&amp;#34; # Usage of python3 source /Users/veritas/.</description>
    </item>
    
    <item>
      <title>개인적으로 사용하는 emacs 설정 모음</title>
      <link>/post/emacs/emacs/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0900</pubDate>
      
      <guid>/post/emacs/emacs/</guid>
      <description>Index
  Related:
  emacs main inbox  emacs-my-package emacs-lisp-배워보기 emacs-documentation  emacs-yasnippet Snippet collections can be stored in plain text files. They are arranged by sub-directories naming snippet tables. These mostly name Emacs major mode names. 기본적으로 Emacs major Mode의 네임으로 subdir을 만들어서 관리한다.
Triggering Expansion   link
  when yas-minor-mode is active 일 때 triggering key를 누르면 확장 된다.
  Writting Snippet emacs-my-package 내가 사용하는 package를 모아서 정리</description>
    </item>
    
    <item>
      <title>6장 AOP</title>
      <link>/post/java/toby-spring-chapter-6/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0900</pubDate>
      
      <guid>/post/java/toby-spring-chapter-6/</guid>
      <description>Proxy, ProxyPattern, DecoratorPattern Decorator Pattern   다른 언어와의 차이점
  자바의 함수는 1급 객체가 아니다.
    Example1 Input Stream 자바에서 Decorator패턴을 구현하기 위해서는 결국 Proxy의 형태로 구현할 수 밖에 없다. 자바는 함수가 1급 객체가 아니기 때문이다.
  Figure 1: BufferedInputStream 예제
  핵심 기능과 부가기능을 분리하는 여러가지 방법들 </description>
    </item>
    
    <item>
      <title>java-junit</title>
      <link>/post/java/java-junit/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0900</pubDate>
      
      <guid>/post/java/java-junit/</guid>
      <description>java-junit  link   용어정리 JUnit 기본 단언문  특징 단언문 Hamcrest 대표적인 Matchers      Index
  Related:
  java-junit sitename test
link  github-team-junit  용어정리  test context 테스트의 정의  반복적으로 수행되고 동일한 결과를 얻어야 함   테스트케이스에서 사용하는 인스턴스 파일이나 네트워크 등의 자원을 만들어서 지정 데이터베이스 연동  JUnit 기본 단언문  assertEqual: 두개의 값이 같은지 비교 assertSame: 두 개의 객체가 정말 동일한 객체인지 확인 assertTrue: 예상 값의 참 거짓을 판별 asserNull: 대상 값이 null이면 참이 됨 fail  특징 fixture  @BeforeClass @AfterClass @Before @After  테스트 종류  시간 제한 테스트  @Test(timeout=1000)   테스트 무시  @Ignore   배열지원 @RunWith  JUnit Test 클래스를 실행하기 위해서 Runner명시적으로 지정   @Suiteclasses(Class[])  여러개의 테스트 클래스를 수행하기 위해서 쓰임 @RunWith(Suite.</description>
    </item>
    
    <item>
      <title>emacs 스크롤을 pixcel 단위로 변경하기</title>
      <link>/post/emacs-scroll-pixel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/emacs-scroll-pixel/</guid>
      <description> 아래와 같이 설정해주면 inline 이미지에서 스크롤시 점프하지 않는다.  ;; https://emacs.stackexchange.com/questions/10354/smooth-mouse-scroll-for-inline-images (pixel-scroll-mode) (setq pixel-dead-time 0) ; Never go back to the old scrolling behaviour. (setq pixel-resolution-fine-flag t) ; Scroll by number of pixels instead of lines (t = frame-char-height pixels). (setq mouse-wheel-scroll-amount &amp;#39;(1)) ; Distance in pixel-resolution to scroll each mouse wheel event. (setq mouse-wheel-progressive-speed nil) ; Progressive speed is too fast for me. </description>
    </item>
    
    <item>
      <title>groovy</title>
      <link>/post/groovy/20210614205039-groovy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/groovy/20210614205039-groovy/</guid>
      <description>문서 https://groovy-lang.org/index.html
세미콜론 생략가능 괄호 생략가능  print(&amp;ldquo;hello world&amp;rdquo;) print &amp;ldquo;hello world&amp;rdquo;  def def hello() { &amp;#39;hello&amp;#39; // return type 생략 가능 } String  String name = &amp;ldquo;ka&amp;rdquo; String full = &amp;ldquo;${name}&amp;rdquo; // interpolation 가능  Access Modifier  기본 access modifier가 public이다.  Import default Import  Groovy.lang.* Groovy.utils.* java.lang.* java.util* java.net.* java.io java.math.BigInteger java.math.BigDecimal  정적 IMPORT  import static Boolean.False  namespace   정적 import와 동일한 이름의 메서드를 선언할 수 있지만, import된 클래스가 더 우선시 된다.</description>
    </item>
    
    <item>
      <title>hugo를 사용한 정적 블로깅</title>
      <link>/post/essay/how-to-make-static-blog-by-using-hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/essay/how-to-make-static-blog-by-using-hugo/</guid>
      <description>설치 brew install hugo 디렉토리 구조 만들기  hugo new site {blog_name} theme추가  git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke git submodule add -b master https://github.com/karohani/karohani.github.com public    google에서 사이트가 검색 되도록 하기 Google Search Console에 SiteMap등록  google webmaster 파일을 다운 받은 뒤에 static폴더 안에 넣고 검증 버튼을 누르면 완료된다.  OX-hugo를 이용해서 실제 데이터와 바인딩하기 주의점 파일 이름이 한글이면 제대로 출력되지 않는다.  TITLE은 한글로 하더라도 파일이름은 한글로 해서는 안된다 ㅠㅠ 젠장  </description>
    </item>
    
    <item>
      <title>hugo를 사용한 정적 블로깅</title>
      <link>/post/hugo%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%A0%95%EC%A0%81%EB%B8%94%EB%A1%9C%EA%B9%85%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/hugo%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%A0%95%EC%A0%81%EB%B8%94%EB%A1%9C%EA%B9%85%ED%95%98%EA%B8%B0/</guid>
      <description>설치 brew install hugo 디렉토리 구조 만들기  hugo new site {blog_name} theme추가  git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke git submodule add -b master https://github.com/karohani/karohani.github.com public    google에서 사이트가 검색 되도록 하기 Google Search Console에 SiteMap등록  google webmaster 파일을 다운 받은 뒤에 static폴더 안에 넣고 검증 버튼을 누르면 완료된다.  </description>
    </item>
    
    <item>
      <title>ox hugo ??</title>
      <link>/post/emacs/123123123/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/emacs/123123123/</guid>
      <description>TODO ox hugo 설치 [2021-05-24 Mon 22:51](use-package ox-hugo :ensure t ;Auto-install the package from Melpa (optional) :after ox) BASE dir 설정하기 #+HUGO_BASE_DIR: 폴더명 hugo base dir이 지정되면 ~/hugo/content/&amp;lt;HUGO_SECTION&amp;gt;/하위에 저장된다.
 </description>
    </item>
    
    <item>
      <title>ox hugo를 사용해서 블로그 포스팅 하기</title>
      <link>/post/20210524225133-orgmode-hugo%E1%84%85%E1%85%A9-%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3-%E1%84%91%E1%85%A9%E1%84%89%E1%85%B3%E1%84%90%E1%85%B5%E1%86%BC-%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5-/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/20210524225133-orgmode-hugo%E1%84%85%E1%85%A9-%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3-%E1%84%91%E1%85%A9%E1%84%89%E1%85%B3%E1%84%90%E1%85%B5%E1%86%BC-%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5-/</guid>
      <description>TODO ox hugo 설치 (use-package ox-hugo :ensure t ;Auto-install the package from Melpa (optional) :after ox) Export를 위한 Property추가 #+HUGO_BASE_DIR: 폴더명 #+HUGO_CATEGORIES: #+HUGO_SECTION: {12123} hugo base dir이 지정되면 ~/hugo/content/&amp;lt;HUGO_SECTION&amp;gt;/하위에 저장된다.
export하기 &amp;ldquo;C-c C-e&amp;rdquo; &amp;ldquo;H&amp;rdquo; &amp;ldquo;h&amp;quot;를 하면 다음과 같이 파일이 추출된다.
   subtree to file to file subtree to file and open  </description>
    </item>
    
    <item>
      <title>Zettelkasten(상자방법)을 이용한 효과적인 공부방법</title>
      <link>/post/essay/201022-1143-zettelkasten/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/essay/201022-1143-zettelkasten/</guid>
      <description>생각을 기록하면 이렇게 된다 최고의 모드는 orgmode이다.
하지만 최대한 다른 모드와 기능들은 배제하고 내가 직접 작성한 것들만 사용하고 싶다. 그러면 역시 orgmode와 이것을 조합한게 최고인듯? &amp;lt;201022-1143-zettelkasten.org&amp;gt;
핵심 원리  언제든지 찾을 수 있는 unique-id system backlink를 통한 생각의 정리와 조합 카드에는 하나의 아이디어만 있어야 함 (원자성) 각각의 카드를 다른 아이디어와 링크시키기  Reference  뉴스 기사 dpitt.me Using Emacs&amp;rsquo;s org-mode As Your Zettelkasten Org-mode Workflow Part 3: Zettelkasten with Org-mode · Jethro Kuan  </description>
    </item>
    
  </channel>
</rss>
